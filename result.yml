openapi: 3.0.0
info:
  title: Mero Hostel
  description: Mero Hostel API documentation
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Mero Hostel
    url: https://hancie-phago.com.np/
    email: merohostel@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: https://merohostel.hancie-phago.com.np/
    description: server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: admin
  - name: admin > hostel
  - name: admin > room
  - name: public
  - name: public > login
  - name: public > users
  - name: public > hostel
paths:
  /admin/hostels:
    post:
      tags:
        - admin > hostel
      summary: create hostel
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                hostel_name:
                  type: string
                  example: Nitesh Boys Hostel
                address:
                  type: string
                  example: Shankamul
                phone_number:
                  type: integer
                  example: '9813371345'
                email:
                  type: string
                  example: nitesh0hamal@gmail.com
                website:
                  type: string
                  example: nsnsnsn
                hostel_image:
                  type: string
                  format: binary
                hostel_type:
                  type: string
                  example: Boys hostel
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - admin > hostel
      summary: show all hostels
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/hostels/nitesh-boys-hostel:
    post:
      tags:
        - admin > hostel
      summary: update hostel
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                hostel_name:
                  type: string
                  example: nitesh
                hostel_type:
                  type: string
                  example: boys
                address:
                  type: string
                  example: Shankamul
                phone_number:
                  type: integer
                  example: '9813371345'
                email:
                  type: string
                  example: nitesh@gmail.com
                website:
                  type: string
                  example: aaaa
                hostel_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/hostels/nitesh:
    get:
      tags:
        - admin > hostel
      summary: show single hostel
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - admin > hostel
      summary: delete hostel
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/rooms:
    post:
      tags:
        - admin > room
      summary: create room
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                room_number:
                  type: integer
                  example: '1'
                room_type:
                  type: string
                  example: double bed
                capacity:
                  type: string
                  example: 2 people
                availability:
                  type: string
                  example: 'Yes'
                price:
                  type: integer
                  example: '5000'
                features:
                  type: string
                  example: features
                hostel_id:
                  type: integer
                  example: '2'
                room_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - admin > room
      summary: get all rooms
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/rooms/1:
    post:
      tags:
        - admin > room
      summary: update room
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                room_number:
                  type: integer
                  example: '1'
                room_type:
                  type: string
                  example: single
                capacity:
                  type: integer
                  example: '1'
                availability:
                  type: string
                  example: 'No'
                price:
                  type: integer
                  example: '8000'
                features:
                  type: string
                  example: the features
                hostel_id:
                  type: integer
                  example: '2'
                room_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - admin > room
      summary: get single room
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - admin > room
      summary: delete room
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - public > login
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hanciephago@gmail.com
                password:
                  type: string
                  example: hancie12345
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users:
    post:
      tags:
        - public > users
      summary: create users
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hanciephago@gmail.com
                password:
                  type: string
                  example: hancie12345
                password_confirmation:
                  type: string
                  example: hancie12345
                status:
                  type: string
                  example: Hostel_Owner
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/hostels:
    get:
      tags:
        - public > hostel
      summary: get all hostels
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
