openapi: 3.0.0
info:
  title: Mero Hostel
  description: Mero Hostel API documentation
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Mero Hostel
    url: https://hancie-phago.com.np/
    email: merohostel@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: https://merohostel.hancie-phago.com.np/
    description: server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: admin
  - name: admin > hostel
  - name: admin > room
  - name: admin > user
  - name: admin > hostel booking
  - name: public
  - name: public > login
  - name: public > users
  - name: public > hostel
  - name: public > hostel room
paths:
  /admin/hostels:
    post:
      tags:
        - admin > hostel
      summary: create hostel
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                hostel_name:
                  type: string
                  example: Kanya Girls Hostel
                address:
                  type: string
                  example: Dilibazar
                phone_number:
                  type: integer
                  example: '9824543556'
                email:
                  type: string
                  example: kanya@gmail.com
                website:
                  type: string
                  example: kanyagirlshostel.com
                hostel_image:
                  type: string
                  format: binary
                hostel_type:
                  type: string
                  example: Girls hostel
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - admin > hostel
      summary: show all hostels
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/hostels/nitesh-boys-hostel:
    post:
      tags:
        - admin > hostel
      summary: update hostel
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                hostel_name:
                  type: string
                  example: nitesh
                hostel_type:
                  type: string
                  example: boys
                address:
                  type: string
                  example: Shankamul
                phone_number:
                  type: integer
                  example: '9813371345'
                email:
                  type: string
                  example: nitesh@gmail.com
                website:
                  type: string
                  example: aaaa
                hostel_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/hostels/nitesh:
    get:
      tags:
        - admin > hostel
      summary: show single hostel
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - admin > hostel
      summary: delete hostel
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/rooms:
    post:
      tags:
        - admin > room
      summary: create room
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                room_number:
                  type: integer
                  example: '1'
                room_type:
                  type: string
                  example: double bed
                capacity:
                  type: string
                  example: 2 people
                availability:
                  type: string
                  example: 'Yes'
                price:
                  type: integer
                  example: '5000'
                features:
                  type: string
                  example: features
                hostel_id:
                  type: integer
                  example: '2'
                room_image:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - admin > room
      summary: get all rooms
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/rooms/{room_id}:
    post:
      tags:
        - admin > room
      summary: update room
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                room_number:
                  type: integer
                  example: '1'
                room_type:
                  type: string
                  example: single
                capacity:
                  type: integer
                  example: '1'
                availability:
                  type: string
                  example: 'No'
                price:
                  type: integer
                  example: '8000'
                features:
                  type: string
                  example: the features
                hostel_id:
                  type: integer
                  example: '2'
                room_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: room_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - admin > room
      summary: delete room
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: room_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/rooms/1:
    get:
      tags:
        - admin > room
      summary: get single room
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/user/status/update:
    post:
      tags:
        - admin > user
      summary: update status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: nitesh@gmail.com
                status:
                  type: string
                  example: Hostel_Owner
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/user/4:
    post:
      tags:
        - admin > user
      summary: update user details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: df
                email:
                  type: string
                  example: gfg
                profile_image:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: put
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 16:38:09 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 4
                  name: df
                  email: gfg
                  status: Hostel_Owner
                  profile_image: >-
                    http://localhost:8000/storage/1/Screenshot-2023-12-19-at-8.44.08 PM.png
                  created_at: '2023-12-23T18:04:59.000000Z'
                  updated_at: '2023-12-26T15:24:46.000000Z'
                message: User data updated successfully!
  /admin/user/{id}:
    get:
      tags:
        - admin > user
      summary: show single user data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8000
            Date:
              schema:
                type: string
                example: Tue, 26 Dec 2023 16:34:59 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '56'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: 4
                  name: df
                  email: gfg
                  status: Hostel_Owner
                  profile_image: ''
                  created_at: '2023-12-23T18:04:59.000000Z'
                  updated_at: '2023-12-26T15:24:46.000000Z'
  /admin/hostel-booking:
    post:
      tags:
        - admin > hostel booking
      summary: request hostel
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                hostel_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8001
            Date:
              schema:
                type: string
                example: Sat, 23 Dec 2023 17:31:44 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '58'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  user_id: 2
                  hostel_id: '1'
                  updated_at: '2023-12-23T17:31:44.000000Z'
                  created_at: '2023-12-23T17:31:44.000000Z'
                  id: 1
                message: You have requested the hostel successfully!
    get:
      tags:
        - admin > hostel booking
      summary: show all hostel request data
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: user_id
          in: query
          schema:
            type: integer
          example: '9'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - public > login
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hanciephago@gmail.com
                password:
                  type: string
                  example: hancie12345
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users:
    post:
      tags:
        - public > users
      summary: create users
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Aveshesh KC
                email:
                  type: string
                  example: kcaveshesh123@gmail.com
                password:
                  type: string
                  example: hancie12345
                password_confirmation:
                  type: string
                  example: hancie12345
                status:
                  type: string
                  example: Hostel_Owner
                profile_image:
                  type: string
                  format: binary
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Host:
              schema:
                type: string
                example: 127.0.0.1:8001
            Date:
              schema:
                type: string
                example: Sat, 23 Dec 2023 18:05:06 GMT
            Connection:
              schema:
                type: string
                example: close
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.11
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Content-Type:
              schema:
                type: string
                example: application/json
            X-RateLimit-Limit:
              schema:
                type: integer
                example: '60'
            X-RateLimit-Remaining:
              schema:
                type: integer
                example: '59'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  data:
                    name: Aveshesh KC
                    email: kcaveshesh123@gmail.com
                    status: Hostel_Owner
                    updated_at: '2023-12-23T18:04:59.000000Z'
                    created_at: '2023-12-23T18:04:59.000000Z'
                    id: 4
                    roles:
                      - id: 1
                        name: hostel_owner
                        guard_name: web
                        created_at: '2023-12-19T17:05:40.000000Z'
                        updated_at: '2023-12-19T17:05:40.000000Z'
                        pivot:
                          model_type: App\Models\User
                          model_id: 4
                          role_id: 1
                  token: iylXA2FLfJYYEh1b0putIhi50A3CU4yw24mdOMsyafuzh9g8go2ufEN3n3Bd
                message: User account created successfully!
  /api/hostels:
    get:
      tags:
        - public > hostel
      summary: get all hostels
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: hostel_type
          in: query
          schema:
            type: string
          example: Girls hostel
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/hostel-rooms:
    get:
      tags:
        - public > hostel room
      summary: show hostel room details
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: hostel_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
