openapi: 3.0.0
info:
  title: Mero Hostel
  description: Mero Hostel API documentation
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Mero Hostel
    url: https://hancie-phago.com.np/
    email: merohostel@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: https://merohostel.hancie-phago.com.np/
    description: server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Admin
  - name: Admin > hostels
  - name: Public
  - name: Public > login
  - name: Public > user
paths:
  /admin/hostels:
    post:
      tags:
        - Admin > hostels
      summary: create hostels
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                hostel_name:
                  type: string
                  example: Mero Hostel
                address:
                  type: string
                  example: Kathmandu
                phone_number:
                  type: integer
                  example: '9825915122'
                email:
                  type: string
                  example: hanciephago@gmail.com
                website:
                  type: string
                  example: hanciephago.com.np
                user_id:
                  type: integer
                  example: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > hostels
      summary: show hostels
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: query
          schema:
            type: string
          example: mero-hostel-1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/hostels/{slug}:
    post:
      tags:
        - Admin > hostels
      summary: update hostel
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: put
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > hostels
      summary: delete hostel
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - Public > login
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hanciephago@gmail.com
                password:
                  type: integer
                  example: '12345678'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/send-forgot-password-mail:
    post:
      tags:
        - Public > login
      summary: forgot password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hanciewanemphago@gmail.com
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/users:
    post:
      tags:
        - Public > user
      summary: create account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hanciewanemphago@gmail.com
                password:
                  type: integer
                  example: '12345678'
                password_confirmation:
                  type: integer
                  example: '12345678'
                status:
                  type: string
                  example: Hostel_Owner
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
